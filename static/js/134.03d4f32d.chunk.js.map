{"version":3,"file":"static/js/134.03d4f32d.chunk.js","mappings":"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","sources":["components/NotFound/NotFound.tsx","pages/RecipeCard/RecipeCard.tsx","api/api.ts","stores/recipes.ts"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport './NotFound.scss';\n\nconst NotFound = () => {\n  const {t} = useTranslation();\n\n  return (\n    <div className=\"not-found\">\n      <h1 className=\"not-found__title\">\n        {t('404')}\n      </h1>\n\n      <Link to=\"/\" className=\"not-found__link\">\n        {t('goHome')}\n      </Link>\n    </div>\n  );\n};\n\nexport default NotFound;","import { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport {BsFillArrowLeftCircleFill} from 'react-icons/bs'\nimport useRecipesStore from \"../../stores/recipes\";\nimport NotFound from \"../../components/NotFound/NotFound\";\nimport { Recipe } from \"../../types/Recipe\";\nimport './RecipeCard.scss';\n\nconst formatTime = (time: string) => {\n  return time.split('/').join('-')\n};\n\nconst RecipeCard = () => {\n  const [recipe, setRecipe] = useState<Recipe | null>(null);\n  const {recipes} = useRecipesStore(state => state);\n  const {id} = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (id) {\n      setRecipe(recipes.find(currRecipe => currRecipe.id === +id) || null);\n    }\n  }, [id, recipes]);\n\n  if (!recipe) {\n    return <NotFound />;\n  }\n\n  return (\n    <section>\n     <div className=\"container\">\n        <button\n          className=\"recipe-card__btn\"\n          onClick={() => navigate(-1)}\n        >\n          <BsFillArrowLeftCircleFill size={30} />\n        </button>\n\n        <div className=\"recipe-card\">\n          <img\n            className=\"recipe-card__img\"\n            src={recipe?.image_url}\n            alt=\"beer\"\n          />\n    \n          <h2 className=\"recipe-card__title\">\n            {recipe?.name}\n          </h2>\n  \n          <p className=\"recipe-card__subtitle\">\n            {recipe?.tagline}\n          </p>\n  \n          <time\n            dateTime={formatTime(recipe?.first_brewed || '')}\n          >\n            {recipe?.first_brewed}\n          </time>\n  \n          <i className=\"recipe-card__description\">\n            {recipe?.description}\n          </i>\n\n          <hr className=\"recipe-card__line\" />\n  \n          <ul className=\"recipe-card__list\">\n            <li className=\"recipe-card__item\">\n              <h3 className=\"recipe-card__item-title\">Ingredients:</h3>\n\n              <ul className=\"recipe-card__list\">\n                <li className=\"recipe-card__item\">\n                  <h4>Malt:</h4>\n  \n                  <ul className=\"recipe-card__list\">\n                    {recipe?.ingredients.malt.map((value: any, index: number)=> (\n                      <li key={index} className=\"recipe-card__item\">\n                        {value.name} - {value.amount.value} {value.amount.unit}\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n  \n                <li className=\"recipe-card__item\">\n                  <h4>Hops:</h4>\n  \n                  <ul className=\"recipe-card__list\">\n                    {recipe?.ingredients.hops.map((value: any, index: number)=> (\n                      <li key={index} className=\"recipe-card__item\">\n                        {value.name} - {value.amount.value} {value.amount.unit}\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n              </ul>\n\n            </li>\n  \n            <li className=\"recipe-card__item\">\n              <h3 className=\"recipe-card__item-title\">Food pairing:</h3>\n              \n              <ul className=\"recipe-card__list\">\n                {recipe?.food_pairing.map(value => (\n                  <li key={value} className=\"recipe-card__item\">\n                    {value}\n                  </li>\n                ))}\n              </ul>\n            </li>\n  \n            <li className=\"recipe-card__item\">\n              <h3 className=\"recipe-card__item-title\">Tips:</h3>\n\n              {recipe?.brewers_tips}\n            </li>\n          </ul>\n\n          <hr className=\"recipe-card__line\" />\n  \n          <i className=\"recipe-card__contributor\">\n            {recipe?.contributed_by}\n          </i>\n        </div>\n     </div>\n    </section>\n  );\n};\n\nexport default RecipeCard;","import { Recipe } from \"../types/Recipe\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction wait() {\n  return new Promise(resolve => {\n    setTimeout(resolve, 300);\n  });\n}\n\nexport const getRecipes = (page: number): Promise<Recipe[]> => {\n  return wait()\n    .then(() => fetch(`${BASE_URL}?page=${page}`))\n    .then(response => response.json())\n};\n\nexport const getRecipe = (id: number): Promise<Recipe[]> => {\n  return wait()\n    .then(() => fetch(`${BASE_URL}/${id}`))\n    .then(response => response.json())\n};","import { create } from 'zustand'\nimport { getRecipes } from '../api/api';\nimport { Recipe } from '../types/Recipe';\n\ninterface RecipesState {\n  recipes: Recipe[];\n  loading: boolean;\n  fetchRecipes: () => void;\n  addNewRecipes: (page: number) => void;\n  filterRecipes: (ids: number[]) => void;\n}\n\nconst useRecipesStore = create<RecipesState>()((set) => ({\n  recipes: [],\n  loading: true,\n  fetchRecipes: async () => {\n    const response = await getRecipes(1);\n\n    set({ loading: false, recipes: response });\n  },\n  addNewRecipes: async (page: number) => {\n    const response = await getRecipes(page);\n\n    set(state => ({ loading: false, recipes: [...state.recipes, ...response] }));\n  },\n  filterRecipes: (ids: number[]) => {\n    set(state => ({\n      recipes: state.recipes.filter(currRecipe => !ids.includes(currRecipe.id)) \n    }));\n  },\n}));\n\nexport default useRecipesStore;"],"names":["t","useTranslation","_jsxs","className","children","_jsx","Link","to","time","_useState","useState","_useState2","_slicedToArray","recipe","setRecipe","recipes","useRecipesStore","state","id","useParams","navigate","useNavigate","useEffect","find","currRecipe","onClick","BsFillArrowLeftCircleFill","size","src","image_url","alt","name","tagline","dateTime","first_brewed","split","join","description","ingredients","malt","map","value","index","amount","unit","hops","food_pairing","brewers_tips","contributed_by","NotFound","BASE_URL","process","wait","Promise","resolve","setTimeout","getRecipes","page","then","fetch","concat","response","json","create","set","loading","fetchRecipes","_fetchRecipes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","addNewRecipes","_addNewRecipes","_callee2","_context2","_toConsumableArray","_x","filterRecipes","ids","filter","includes"],"sourceRoot":""}