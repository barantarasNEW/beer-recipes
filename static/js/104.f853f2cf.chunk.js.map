{"version":3,"file":"static/js/104.f853f2cf.chunk.js","mappings":"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","sources":["components/Loader/Loader.tsx","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","components/Recipe/Recipe.tsx","pages/Recipes/Recipes.tsx","api/api.ts","stores/recipes.ts"],"sourcesContent":["import { createPortal } from \"react-dom\";\nimport './Loader.scss'\n\nconst Loader = () => {\n  return (\n    <>\n      {createPortal(\n        (\n          <div className=\"lds-ellipsis\">\n            <div />\n            <div />\n            <div />\n            <div />\n          </div>\n        ),\n        document.getElementById(\"portal\") as HTMLElement\n      )}\n    </>\n  );\n};\n\nexport default Loader;","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import React from 'react';\nexport default React.createContext(null);","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { Recipe as RecipeType } from \"../../types/Recipe\";\nimport './Recipe.scss';\n\ntype Props = {\n  recipe: RecipeType;\n  toggleSelectedCard: (id: number) => void;\n};\n\nconst Recipe: React.FC<Props> = ({ recipe: { image_url, name, id }, toggleSelectedCard }) => {\n  const [isSelected, setIsSelected] = useState(false);\n  const {t} = useTranslation();\n  \n  const onChange = () => {\n    toggleSelectedCard(id);\n    setIsSelected(prev => !prev);\n  };\n\n  return (\n    <div className=\"recipe\">\n      <input\n        className=\"recipe__checkbox\"\n        type=\"checkbox\"\n        checked={isSelected}\n        onChange={onChange}\n      />\n\n      <img className=\"recipe__img\" src={image_url} alt=\"\" />\n\n      <h3 className=\"recipe__name\">{name}</h3>\n\n      <Link to={`./${id}`} className=\"recipe__btn\">\n        {t('seeRecipe')}\n      </Link>\n    </div>\n  );\n};\n\nexport default Recipe;","import {useEffect, useMemo, useState } from \"react\";\nimport {AiFillDelete} from 'react-icons/ai'\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport useRecipeStore from \"../../stores/recipes\";\nimport Loader from \"../../components/Loader/Loader\";\nimport Recipe from \"../../components/Recipe/Recipe\";\nimport './Recipes.scss';\n\nconst Recipes = () => {\n  const [selectedCards, setSelectedCards] = useState<number[]>([]);\n  const [page, setPage] = useState(1);\n  const { loading, recipes, filterRecipes, addNewRecipes } = useRecipeStore(state => state);\n  const visibleRecipes = useMemo(() => {\n    const result = recipes.slice(0, 15);\n\n    if (result.length !== 15 && recipes.length !== 15) {\n      setPage(curr => curr + 1);\n\n      return recipes.slice(0, 15);\n    }\n\n    return result;\n  }, [recipes]);\n\n  const toggleSelectedCard = (id: number) => {\n    setSelectedCards(prev => {\n      if (prev.includes(id)) {\n        return prev.filter(currId => currId !== id);\n      }\n\n      return ([...prev, id]);\n    });\n  };\n\n  const onRemoveCards = () => {\n    filterRecipes(selectedCards);\n\n    setSelectedCards([]);\n  };\n\n  useEffect(() => {\n    addNewRecipes(page);\n  }, [page, addNewRecipes]);\n\n  if (loading) {\n    return <Loader />\n  }\n\n  return (\n    <section className=\"recipes\">\n      <div className=\"container\">\n        {!!selectedCards.length && (\n          <button className=\"recipes__remove\" onClick={onRemoveCards}>\n            <AiFillDelete size={30} />\n          </button>\n        )}\n\n        <ul>\n          <TransitionGroup className=\"recipes__list\">\n            {visibleRecipes.map((recipe) => (\n              <CSSTransition\n                key={recipe.id}\n                timeout={500}\n                classNames=\"item\"\n              >\n                <li key={recipe.id} className=\"recipes__item\">\n                  <Recipe recipe={recipe} toggleSelectedCard={toggleSelectedCard} />\n                </li>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default Recipes;","import { Recipe } from \"../types/Recipe\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\n\nfunction wait() {\n  return new Promise(resolve => {\n    setTimeout(resolve, 300);\n  });\n}\n\nexport const getRecipes = (page: number): Promise<Recipe[]> => {\n  return wait()\n    .then(() => fetch(`${BASE_URL}?page=${page}`))\n    .then(response => response.json())\n};\n\nexport const getRecipe = (id: number): Promise<Recipe[]> => {\n  return wait()\n    .then(() => fetch(`${BASE_URL}/${id}`))\n    .then(response => response.json())\n};","import { create } from 'zustand'\nimport { getRecipes } from '../api/api';\nimport { Recipe } from '../types/Recipe';\n\ninterface RecipesState {\n  recipes: Recipe[];\n  loading: boolean;\n  fetchRecipes: () => void;\n  addNewRecipes: (page: number) => void;\n  filterRecipes: (ids: number[]) => void;\n}\n\nconst useRecipesStore = create<RecipesState>()((set) => ({\n  recipes: [],\n  loading: true,\n  fetchRecipes: async () => {\n    const response = await getRecipes(1);\n\n    set({ loading: false, recipes: response });\n  },\n  addNewRecipes: async (page: number) => {\n    const response = await getRecipes(page);\n\n    set(state => ({ loading: false, recipes: [...state.recipes, ...response] }));\n  },\n  filterRecipes: (ids: number[]) => {\n    set(state => ({\n      recipes: state.recipes.filter(currRecipe => !ids.includes(currRecipe.id)) \n    }));\n  },\n}));\n\nexport default useRecipesStore;"],"names":["_jsx","_Fragment","children","createPortal","_jsxs","className","document","getElementById","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_inheritsLoose","subClass","superClass","create","constructor","setPrototypeOf","React","getChildMapping","mapFn","result","Children","map","c","forEach","child","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","_assertThisInitialized","state","contextValue","isMounting","firstRender","_proto","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","TransitionGroupContext","Provider","value","propTypes","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","forceReflow","scrollTop","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","initialStatus","appearStatus","unmountOnExit","mountOnEnter","status","nextCallback","prevState","updateStatus","componentDidUpdate","prevProps","nextStatus","cancelNextCallback","getTimeouts","timeout","undefined","mounting","nodeRef","current","ReactDOM","performEnter","performExit","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","childProps","only","noop","contextType","removeClass","classes","split","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","args","Array","_key","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","done","_ref$recipe","recipe","image_url","name","id","toggleSelectedCard","_useState","useState","_useState2","_slicedToArray","isSelected","setIsSelected","t","useTranslation","checked","onChange","src","alt","Link","to","selectedCards","setSelectedCards","_useState3","_useState4","page","setPage","_useRecipeStore","useRecipeStore","loading","recipes","filterRecipes","addNewRecipes","visibleRecipes","useMemo","slice","curr","includes","filter","currId","_toConsumableArray","useEffect","Loader","onClick","AiFillDelete","size","Recipe","BASE_URL","process","wait","Promise","resolve","getRecipes","then","fetch","response","json","useRecipesStore","set","fetchRecipes","_fetchRecipes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","sent","stop","_addNewRecipes","_callee2","_context2","_x","ids","currRecipe"],"sourceRoot":""}